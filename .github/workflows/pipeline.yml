# name: Publish Docker image to ECR

# on:
#   push:
#     branches: ["main"]

# env:
#   DOCKER_REGISTRY: ${{secrets.ECR_REPO_URL}}
#   AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
#   APP_NAME: nginx-app
#   AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
#   AWS_SECRET_ACCESS: ${{secrets.AWS_SECRET_ACCESS_KEY}}

# jobs:
#   install-awcli-docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Install AWS CLI and Docker
#         run: |
#           sudo apt-get update
#           sudo apt-get -y install awscli 
#           sudo apt-get -y install curl
#           curl -fsSL https://get.docker.com -o get-docker.sh
#           chmod +x get-docker.sh
#           ./get-docker.sh
          
#   build-and-push-Docker-image-to-ECR:
#     needs: [install-awcli-docker]
#     env:
#       AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#       AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#       AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
#       DOCKER_REGISTRY: ${{secrets.ECR_REPO_URL}}
#       APP_NAME: nginx-app
#     runs-on: ubuntu-latest
#     steps:
     

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
#           aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#           aws-region: ${{secrets.AWS_DEFAULT_REGION}}

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build and push Docker image to ECR
#         env:
#           DOCKER_REGISTRY: ${{secrets.ECR_REPO_URL}}
#           AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
#           APP_NAME: nginx-app
#           AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#           AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#           DOCKER_BUILDKIT: 1
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: ${{env.DOCKER_REGISTRY}}/${{env.APP_NAME}}:${{ github.run_number }}
#           timeout: 300s



name: Build and Push Golang Image to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

  
    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nginx-app
        
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG