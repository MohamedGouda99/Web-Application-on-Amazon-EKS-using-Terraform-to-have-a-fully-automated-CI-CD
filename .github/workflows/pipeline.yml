name: Build and Push Image to AWS ECR
on:
  push:
    branches: [ main ]

jobs:

  install-terraform-apply:
    
      name: install-terraform-apply
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: '14'
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.3.7

        - name: Initialize Terraform
          run: terraform init

        - name: Plan Terraform
          run: terraform plan

        - name: Apply Terraform
          run: terraform apply -auto-approve
          
          

  build-and-push:
    needs: install-terraform-apply
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
      run: |
        cd $GITHUB_WORKSPACE/docker-image
        docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }} .
        docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }}

  update-kubeconfig:
    needs: build-and-push
    name: Update kubeconfig
    runs-on: ubuntu-latest
    steps:

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: "v1.24.0"
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Update kube config
      run: aws eks update-kubeconfig --name hr-stag-eksdemo1 --region us-east-1

    

    - name: Checkout
      uses: actions/checkout@v2

    - name: Verify deployment
      run: |
        cd $GITHUB_WORKSPACE/k8s-manifests
        kubectl apply -f 1-deployment.yml
        kubectl apply -f 2-service.yml
        kubectl apply -f 3-ingress.yml