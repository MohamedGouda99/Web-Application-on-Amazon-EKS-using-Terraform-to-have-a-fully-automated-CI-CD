name: Build and Push Image to AWS ECR
on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
      run: |
        cd $GITHUB_WORKSPACE/docker-image
        docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }} .
        docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }}

  update-kubeconfig:
    name: Update kubeconfig
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Update kubeconfig
      uses: steebchen/kubectl-eks@v1
      with:
        eks_cluster_name: hr-stag-eksdemo1
        eks_region: ${{ secrets.AWS_DEFAULT_REGION }}
        kubeconfig_path: $HOME/.kube/config

    - name: Install kubectl
      run: |
        mkdir -p $HOME/bin
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        mv ./kubectl $HOME/bin/kubectl
        echo 'export PATH=$PATH:$HOME/bin' >> $HOME/.bashrc
        source $HOME/.bashrc

    - name: Verify deployment
      run: |
        kubectl apply -f ./k8s-manifests/deployment.yml
        kubectl apply -f ./k8s-manifests/clb-service.yml
        kubectl apply -f ./k8s-manifests/nodeport-service.yml
        kubectl apply -f ./k8s-manifests/nlb.yml

        kubectl get pods
        kubectl get svc 